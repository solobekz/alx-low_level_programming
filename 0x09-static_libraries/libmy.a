!<arch>
0-isupper.o/    0           0     0     644     952       `
# 1 "0-isupper.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "0-isupper.c"
# 1 "main.h" 1



int _putchar(char c);

int _islower(int c);

int _isalpha(int c);

int _abs(int n);

int _isupper(int c);

int _isdigit(int c);

int _strlen(char *s);

void _puts(char *s);

char *_strcpy(char *dest, char *src);

int _atoi(char *s);

char *_strcat(char *dest, char *src);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

char *_memset(char *s, char b, unsigned int n);

char *_memcpy(char *dest, char *src, unsigned int n);

char *_strchr(char *s, char c);

unsigned int _strspn(char *s, char *accept);

char *_strpbrk(char *s, char *accept);

char *_strstr(char *haystack, char *needle);
# 2 "0-isupper.c" 2







int _isupper(int c)
{
 if (c >= 'A' && c <= 'Z')
  return (1);

 return (0);
}
0-memset.o/     0           0     0     644     1007      `
# 1 "0-memset.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "0-memset.c"
# 1 "main.h" 1



int _putchar(char c);

int _islower(int c);

int _isalpha(int c);

int _abs(int n);

int _isupper(int c);

int _isdigit(int c);

int _strlen(char *s);

void _puts(char *s);

char *_strcpy(char *dest, char *src);

int _atoi(char *s);

char *_strcat(char *dest, char *src);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

char *_memset(char *s, char b, unsigned int n);

char *_memcpy(char *dest, char *src, unsigned int n);

char *_strchr(char *s, char c);

unsigned int _strspn(char *s, char *accept);

char *_strpbrk(char *s, char *accept);

char *_strstr(char *haystack, char *needle);
# 2 "0-memset.c" 2
# 11 "0-memset.c"
char *_memset(char *s, char b, unsigned int n)
{
 unsigned int i = 0;

 while (i < n)
 {
  s[i] = b;
  i++;
 }
 return (s);
}

0-strcat.o/     0           0     0     644     1203      `
# 1 "0-strcat.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "0-strcat.c"
# 1 "main.h" 1



int _putchar(char c);

int _islower(int c);

int _isalpha(int c);

int _abs(int n);

int _isupper(int c);

int _isdigit(int c);

int _strlen(char *s);

void _puts(char *s);

char *_strcpy(char *dest, char *src);

int _atoi(char *s);

char *_strcat(char *dest, char *src);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

char *_memset(char *s, char b, unsigned int n);

char *_memcpy(char *dest, char *src, unsigned int n);

char *_strchr(char *s, char c);

unsigned int _strspn(char *s, char *accept);

char *_strpbrk(char *s, char *accept);

char *_strstr(char *haystack, char *needle);
# 2 "0-strcat.c" 2
# 1 "2-strlen.c" 1
# 9 "2-strlen.c"
int _strlen(char *s)
{
 int c = 0;

 while (*s != '\0')
 {
  c++;
  s++;
 }
 return (c);
}
# 3 "0-strcat.c" 2
# 11 "0-strcat.c"
char *_strcat(char *dest, char *src)
{
 int i;
 int j = 2-strlen(dest);

 for (i = 0; src[i] != '\0'; i++)
 {
  dest[i + j] = src[i];
 }
 dest[i + j] = '\0';
 return (dest);
}

100-atoi.o/     0           0     0     644     157       `
# 1 "100-atoi.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "100-atoi.c"

1-isdigit.o/    0           0     0     644     952       `
# 1 "1-isdigit.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "1-isdigit.c"
# 1 "main.h" 1



int _putchar(char c);

int _islower(int c);

int _isalpha(int c);

int _abs(int n);

int _isupper(int c);

int _isdigit(int c);

int _strlen(char *s);

void _puts(char *s);

char *_strcpy(char *dest, char *src);

int _atoi(char *s);

char *_strcat(char *dest, char *src);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

char *_memset(char *s, char b, unsigned int n);

char *_memcpy(char *dest, char *src, unsigned int n);

char *_strchr(char *s, char c);

unsigned int _strspn(char *s, char *accept);

char *_strpbrk(char *s, char *accept);

char *_strstr(char *haystack, char *needle);
# 2 "1-isdigit.c" 2







int _isdigit(int c)
{
 if (c >= '0' && c <= '9')
  return (1);

 return (0);
}
1-memcpy.o/     0           0     0     644     1024      `
# 1 "1-memcpy.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "1-memcpy.c"
# 1 "main.h" 1



int _putchar(char c);

int _islower(int c);

int _isalpha(int c);

int _abs(int n);

int _isupper(int c);

int _isdigit(int c);

int _strlen(char *s);

void _puts(char *s);

char *_strcpy(char *dest, char *src);

int _atoi(char *s);

char *_strcat(char *dest, char *src);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

char *_memset(char *s, char b, unsigned int n);

char *_memcpy(char *dest, char *src, unsigned int n);

char *_strchr(char *s, char c);

unsigned int _strspn(char *s, char *accept);

char *_strpbrk(char *s, char *accept);

char *_strstr(char *haystack, char *needle);
# 2 "1-memcpy.c" 2
# 11 "1-memcpy.c"
char *_memcpy(char *dest, char *src, unsigned int n)
{
 unsigned int i = 0;

 while (i < n)
 {
  dest[i] = src[i];
  i++;
 }
 return (dest);
}
1-strncat.o/    0           0     0     644     1248      `
# 1 "1-strncat.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "1-strncat.c"
# 1 "main.h" 1



int _putchar(char c);

int _islower(int c);

int _isalpha(int c);

int _abs(int n);

int _isupper(int c);

int _isdigit(int c);

int _strlen(char *s);

void _puts(char *s);

char *_strcpy(char *dest, char *src);

int _atoi(char *s);

char *_strcat(char *dest, char *src);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

char *_memset(char *s, char b, unsigned int n);

char *_memcpy(char *dest, char *src, unsigned int n);

char *_strchr(char *s, char c);

unsigned int _strspn(char *s, char *accept);

char *_strpbrk(char *s, char *accept);

char *_strstr(char *haystack, char *needle);
# 2 "1-strncat.c" 2
# 1 "2-strlen.c" 1
# 9 "2-strlen.c"
int _strlen(char *s)
{
 int c = 0;

 while (*s != '\0')
 {
  c++;
  s++;
 }
 return (c);
}
# 3 "1-strncat.c" 2
# 12 "1-strncat.c"
char *_strncat(char *dest, char *src, int n)
{
 int i;
 int j = 2-strlen(dest);

 if (n > 0)
 {
  for (i = 0; i < n && src[i] != '\0'; i++)
  {
   dest[i + j] = src[i];
  }
  dest[i + j] = '\0';
 }
 return (dest);
}
2-strchr.o/     0           0     0     644     1024      `
# 1 "2-strchr.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "2-strchr.c"
# 1 "main.h" 1



int _putchar(char c);

int _islower(int c);

int _isalpha(int c);

int _abs(int n);

int _isupper(int c);

int _isdigit(int c);

int _strlen(char *s);

void _puts(char *s);

char *_strcpy(char *dest, char *src);

int _atoi(char *s);

char *_strcat(char *dest, char *src);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

char *_memset(char *s, char b, unsigned int n);

char *_memcpy(char *dest, char *src, unsigned int n);

char *_strchr(char *s, char c);

unsigned int _strspn(char *s, char *accept);

char *_strpbrk(char *s, char *accept);

char *_strstr(char *haystack, char *needle);
# 2 "2-strchr.c" 2
# 10 "2-strchr.c"
char *_strchr(char *s, char c)
{
 while (*s != '\0')
 {
  if (*s == c)
   return (s);

  s++;
 }
 if (*s == c)
  return (s);
 return ('\0');
}
2-strlen.o/     0           0     0     644     961       `
# 1 "2-strlen.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "2-strlen.c"
# 1 "main.h" 1



int _putchar(char c);

int _islower(int c);

int _isalpha(int c);

int _abs(int n);

int _isupper(int c);

int _isdigit(int c);

int _strlen(char *s);

void _puts(char *s);

char *_strcpy(char *dest, char *src);

int _atoi(char *s);

char *_strcat(char *dest, char *src);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

char *_memset(char *s, char b, unsigned int n);

char *_memcpy(char *dest, char *src, unsigned int n);

char *_strchr(char *s, char c);

unsigned int _strspn(char *s, char *accept);

char *_strpbrk(char *s, char *accept);

char *_strstr(char *haystack, char *needle);
# 2 "2-strlen.c" 2







int _strlen(char *s)
{
 int c = 0;

 while (*s != '\0')
 {
  c++;
  s++;
 }
 return (c);
}

2-strncpy.o/    0           0     0     644     1096      `
# 1 "2-strncpy.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "2-strncpy.c"
# 1 "main.h" 1



int _putchar(char c);

int _islower(int c);

int _isalpha(int c);

int _abs(int n);

int _isupper(int c);

int _isdigit(int c);

int _strlen(char *s);

void _puts(char *s);

char *_strcpy(char *dest, char *src);

int _atoi(char *s);

char *_strcat(char *dest, char *src);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

char *_memset(char *s, char b, unsigned int n);

char *_memcpy(char *dest, char *src, unsigned int n);

char *_strchr(char *s, char c);

unsigned int _strspn(char *s, char *accept);

char *_strpbrk(char *s, char *accept);

char *_strstr(char *haystack, char *needle);
# 2 "2-strncpy.c" 2
# 11 "2-strncpy.c"
char *_strncpy(char *dest, char *src, int n)
{
 int i;

 if (n > 0)
 {
  for (i = 0; i < n && src[i] != '\0'; i++)
  {
   dest[i] = src[i];
  }
 }
 while (i < n)
 {
  dest[i] = '\0';
  i++;
 }
 return (dest);
}
3-islower.o/    0           0     0     644     987       `
# 1 "3-islower.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "3-islower.c"
# 1 "main.h" 1



int _putchar(char c);

int _islower(int c);

int _isalpha(int c);

int _abs(int n);

int _isupper(int c);

int _isdigit(int c);

int _strlen(char *s);

void _puts(char *s);

char *_strcpy(char *dest, char *src);

int _atoi(char *s);

char *_strcat(char *dest, char *src);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

char *_memset(char *s, char b, unsigned int n);

char *_memcpy(char *dest, char *src, unsigned int n);

char *_strchr(char *s, char c);

unsigned int _strspn(char *s, char *accept);

char *_strpbrk(char *s, char *accept);

char *_strstr(char *haystack, char *needle);
# 2 "3-islower.c" 2







int _islower(int c)
{
 if (c >= 'a' && c <= 'z')
 {
  return (1);
 }
 else
 {
  return (0);
 }
 _putchar('\n');
}

3-puts.o/       0           0     0     644     981       `
# 1 "3-puts.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "3-puts.c"
# 1 "main.h" 1



int _putchar(char c);

int _islower(int c);

int _isalpha(int c);

int _abs(int n);

int _isupper(int c);

int _isdigit(int c);

int _strlen(char *s);

void _puts(char *s);

char *_strcpy(char *dest, char *src);

int _atoi(char *s);

char *_strcat(char *dest, char *src);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

char *_memset(char *s, char b, unsigned int n);

char *_memcpy(char *dest, char *src, unsigned int n);

char *_strchr(char *s, char c);

unsigned int _strspn(char *s, char *accept);

char *_strpbrk(char *s, char *accept);

char *_strstr(char *haystack, char *needle);
# 2 "3-puts.c" 2







void _puts(char *str)
{
 char i;

 while (*str != '\0')
 {
  i = *str;
  _putchar(i);
  str++;
 }
 _putchar('\n');
}

3-strcmp.o/     0           0     0     644     1103      `
# 1 "3-strcmp.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "3-strcmp.c"
# 1 "main.h" 1



int _putchar(char c);

int _islower(int c);

int _isalpha(int c);

int _abs(int n);

int _isupper(int c);

int _isdigit(int c);

int _strlen(char *s);

void _puts(char *s);

char *_strcpy(char *dest, char *src);

int _atoi(char *s);

char *_strcat(char *dest, char *src);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

char *_memset(char *s, char b, unsigned int n);

char *_memcpy(char *dest, char *src, unsigned int n);

char *_strchr(char *s, char c);

unsigned int _strspn(char *s, char *accept);

char *_strpbrk(char *s, char *accept);

char *_strstr(char *haystack, char *needle);
# 2 "3-strcmp.c" 2
# 10 "3-strcmp.c"
int _strcmp(char *s1, char *s2)
{
 int j;
 int k = 0;

 while (s1[k] != '\0' && s2[k] != '\0')
 {
  if (s1[k] != s2[k])
  {
   j = s1[k] - s2[k];
   break;
  }
  else
  {
   j = s1[k] - s2[k];
  }
  k++;
 }
 return (j);
}

3-strspn.o/     0           0     0     644     1144      `
# 1 "3-strspn.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "3-strspn.c"
# 1 "main.h" 1



int _putchar(char c);

int _islower(int c);

int _isalpha(int c);

int _abs(int n);

int _isupper(int c);

int _isdigit(int c);

int _strlen(char *s);

void _puts(char *s);

char *_strcpy(char *dest, char *src);

int _atoi(char *s);

char *_strcat(char *dest, char *src);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

char *_memset(char *s, char b, unsigned int n);

char *_memcpy(char *dest, char *src, unsigned int n);

char *_strchr(char *s, char c);

unsigned int _strspn(char *s, char *accept);

char *_strpbrk(char *s, char *accept);

char *_strstr(char *haystack, char *needle);
# 2 "3-strspn.c" 2
# 10 "3-strspn.c"
unsigned int _strspn(char *s, char *accept)
{
 int i, j, f;

 i = 0;
 while (s[i] != '\0')
 {
  j = 0;
  f = 1;
  while (accept[j] != '\0')
  {
   if (s[i] == accept[j])
   {
    f = 0;
    break;
   }
   j++;
  }
  if (f == 1)
   break;
  i++;
 }
 return (i);
}
4-isalpha.o/    0           0     0     644     159       `
# 1 "4-isalpha.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "4-isalpha.c"

4-strpbrk.o/    0           0     0     644     1097      `
# 1 "4-strpbrk.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "4-strpbrk.c"
# 1 "main.h" 1



int _putchar(char c);

int _islower(int c);

int _isalpha(int c);

int _abs(int n);

int _isupper(int c);

int _isdigit(int c);

int _strlen(char *s);

void _puts(char *s);

char *_strcpy(char *dest, char *src);

int _atoi(char *s);

char *_strcat(char *dest, char *src);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

char *_memset(char *s, char b, unsigned int n);

char *_memcpy(char *dest, char *src, unsigned int n);

char *_strchr(char *s, char c);

unsigned int _strspn(char *s, char *accept);

char *_strpbrk(char *s, char *accept);

char *_strstr(char *haystack, char *needle);
# 2 "4-strpbrk.c" 2
# 10 "4-strpbrk.c"
char *_strpbrk(char *s, char *accept)
{
 int i, j;

 i = 0;
 while (s[i] != '\0')
 {
  j = 0;
  while (accept[j] != '\0')
  {
   if (s[i] == accept[j])
    return (s + i);
   j++;
  }
  i++;
 }
 return ('\0');
}

5-strstr.o/     0           0     0     644     1134      `
# 1 "5-strstr.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "5-strstr.c"
# 1 "main.h" 1



int _putchar(char c);

int _islower(int c);

int _isalpha(int c);

int _abs(int n);

int _isupper(int c);

int _isdigit(int c);

int _strlen(char *s);

void _puts(char *s);

char *_strcpy(char *dest, char *src);

int _atoi(char *s);

char *_strcat(char *dest, char *src);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

char *_memset(char *s, char b, unsigned int n);

char *_memcpy(char *dest, char *src, unsigned int n);

char *_strchr(char *s, char c);

unsigned int _strspn(char *s, char *accept);

char *_strpbrk(char *s, char *accept);

char *_strstr(char *haystack, char *needle);
# 2 "5-strstr.c" 2
# 10 "5-strstr.c"
char *_strstr(char *haystack, char *needle)
{
 char *h, *n;

 while (*haystack != '\0')
 {
  h = haystack;
  n = needle;
  while (*n != '\0' && *haystack == *n)
  {
   haystack++;
   n++;
  }
  if (!*n)
   return (h);
  haystack++;
 }
 return ('\0');
}
6-abs.o/        0           0     0     644     953       `
# 1 "6-abs.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "6-abs.c"
# 1 "main.h" 1



int _putchar(char c);

int _islower(int c);

int _isalpha(int c);

int _abs(int n);

int _isupper(int c);

int _isdigit(int c);

int _strlen(char *s);

void _puts(char *s);

char *_strcpy(char *dest, char *src);

int _atoi(char *s);

char *_strcat(char *dest, char *src);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

char *_memset(char *s, char b, unsigned int n);

char *_memcpy(char *dest, char *src, unsigned int n);

char *_strchr(char *s, char c);

unsigned int _strspn(char *s, char *accept);

char *_strpbrk(char *s, char *accept);

char *_strstr(char *haystack, char *needle);
# 2 "6-abs.c" 2







int _abs(int n)
{
 if (n > 0)
  return (n);
 else if (n < 0)
  return (-n);

 return (0);
}

9-strcpy.o/     0           0     0     644     1132      `
# 1 "9-strcpy.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "9-strcpy.c"
# 1 "main.h" 1



int _putchar(char c);

int _islower(int c);

int _isalpha(int c);

int _abs(int n);

int _isupper(int c);

int _isdigit(int c);

int _strlen(char *s);

void _puts(char *s);

char *_strcpy(char *dest, char *src);

int _atoi(char *s);

char *_strcat(char *dest, char *src);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

char *_memset(char *s, char b, unsigned int n);

char *_memcpy(char *dest, char *src, unsigned int n);

char *_strchr(char *s, char c);

unsigned int _strspn(char *s, char *accept);

char *_strpbrk(char *s, char *accept);

char *_strstr(char *haystack, char *needle);
# 2 "9-strcpy.c" 2







int _strlen(char *str)
{
 int len = 0;

 while (*str != '\0')
 {
  len++;
  str++;
 }
 return (len);
}
# 28 "9-strcpy.c"
char *_strcpy(char *dest, char *src)
{
 int i;
 int j = _strlen(src);

 for (i = 0; i <= j; i++)
 {
  dest[i] = src[i];
 }
 return (dest);
}
